<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:reg="http://www.dangdang.com/schema/ddframe/reg" xmlns:job="http://www.dangdang.com/schema/ddframe/job"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/task 
		http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.dangdang.com/schema/ddframe/reg  
        http://www.dangdang.com/schema/ddframe/reg/reg.xsd  
        http://www.dangdang.com/schema/ddframe/job  
        http://www.dangdang.com/schema/ddframe/job/job.xsd">


	<!--当当elasticjob分布式定时任务 -->
	<!--配置作业注册中心 -->
	<reg:zookeeper id="regCenter" server-lists="vm-01-ip:2181" namespace="dd-job" base-sleep-time-milliseconds="1000"
		max-sleep-time-milliseconds="3000" max-retries="3" />

	<!-- 配置简单作业-->
	<job:simple id="sysUserElasticJob" class="com.its.job.elasticjob.SysUserElasticJob" registry-center-ref="regCenter" sharding-total-count="2" cron="0/30 * * * * ?"
		overwrite="true" sharding-item-parameters="0=A,1=B"/>
		
	<bean id="sysUserElasticDataflowJob" class="com.its.job.elasticjob.SysUserElasticDataflowJob">
		<property name="jobManagerService" ref="jobManagerService" />
	</bean>
	
	<!-- 配置数据流作业 -->
	<!-- streaming-process="true"  流式处理数据只有fetchData方法的返回值为null或集合长度为空时，作业才停止抓取，否则作业将一直运行下去； -->
	<!-- streaming-process="false" 非流式处理数据则只会在每次作业执行过程中执行一次fetchData方法和processData方法，随即完成本次作业。 -->
	<job:dataflow id="sysUserElasticDataflowJobId" job-ref="sysUserElasticDataflowJob" registry-center-ref="regCenter" sharding-total-count="2" cron="0/30 * * * * ?" 
	failover="true" overwrite="true" streaming-process="true" sharding-item-parameters="0=A,1=B">
	</job:dataflow>

    <!-- 配置脚本作业
    <job:script id="scriptElasticJob" registry-center-ref="regCenter" cron="0/10 * * * * ?" sharding-total-count="3" sharding-item-parameters="0=A,1=B,2=C" 
    script-command-line="/your/file/path/demo.sh" />
    -->
    <!-- 配置带监听的简单作业
    <job:simple id="listenerElasticJob" class="xxx.MySimpleListenerElasticJob" registry-center-ref="regCenter" cron="0/10 * * * * ?" sharding-total-count="3" sharding-item-parameters="0=A,1=B,2=C">
        <job:listener class="xx.MySimpleJobListener"/>
        <job:distributed-listener class="xx.MyOnceSimpleJobListener" started-timeout-milliseconds="1000" completed-timeout-milliseconds="2000" />
    </job:simple>
    -->
    <!-- 配置带作业数据库事件追踪的简单作业
    <job:simple id="eventTraceElasticJob" class="xxx.MySimpleListenerElasticJob" registry-center-ref="regCenter" cron="0/10 * * * * ?" sharding-total-count="3" sharding-item-parameters="0=A,1=B,2=C" event-trace-rdb-data-source="yourDataSource">
    </job:simple>
    -->
</beans>