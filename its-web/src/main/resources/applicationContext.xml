<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-4.1.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

	<!-- 加载配置文件 
	<context:property-placeholder location="classpath:jdbc.properties,classpath:dubbo/zookeeper.properties" />
	-->
	<!-- 加载配置文件
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:dubbo/zookeeper.properties</value>
			</list>
		</property>
	</bean> -->

	<!-- 对JDBC配置进行解密 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.EncryptPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:dubbo/zookeeper.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- 扫描service自动注入为bean -->
	<context:component-scan
	base-package="com.its.core,com.its.service,com.its.servers.facade,com.its.web.controller,com.its.web.common.report.jasperreports" />
	<!-- 通过实现ApplicationContextAware类getbean注入bean -->
	<bean id="springContextUtils" class="com.its.web.util.SpringContextUtils"></bean>
	
	<!-- Hibernate-->
	<import resource="classpath:spring-hibernate.xml"/>
	<!-- Mybatis-->
	<import resource="classpath:spring-mybatis.xml"/>
	<!-- Mongodb-->
	<import resource="classpath:spring-mongodb.xml"/>
	<!-- remote-client-->
	<import resource="classpath:remote-client.xml"/>
	<!-- dubbo-consumer-消费端-->
	<import resource="classpath:dubbo/dubbo-consumer.xml"/>
	
	<!-- freemarker-->
	<import resource="classpath:spring-freemarker.xml"/>
	
	<!-- 当当elasticjob分布式定时任务-->
	<import resource="classpath:spring-elasticjob.xml"/>
	
</beans>